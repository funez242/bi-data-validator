package com.finvivir.process.bi.unit.consume.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@JsonInclude(value = JsonInclude.Include.NON_NULL)
@Schema(name = "Payment", description = "Information of payment")
public class PaymentDto {

	@Schema(name = "creditId", description = "Identifier of the credit to which the payment belongs", example = "8abf8a998337738e01837269afdb10b7")
	private String creditId;

	@Schema(name = "shortCreditId", description = "Short identifier of the credit to which the payment belongs", example =	"8abf8a998337738e01837269afdb10b7")
	private String shortCreditId;
	
	@Schema(name = "carfinCreditId", description = "Identifier of the credit migrated from the legacy system", example = "32657")
	private String carfinCreditId;
	
	@Schema(name = "totalCreditAmount", description = "Total payable amount of credit", example = "10000")
	private BigDecimal totalCreditAmount;
	
	@Schema(name = "productEncodedKey", description = "Identifier of the product to which the credit belongs", example = "8abf8bd7843ed3c501844ef3a5ab04a2")
	private String productEncodedKey;
	
	@Schema(name = "clientId", description = "Identifier of client of payment", example = "123")
	private String clientId;
	
	@Schema(name = "guarantorId", description = "Identifier of guarantor of payment", example = "564")
	private String guarantorId;
	
	@Schema(name = "openingDate", description = "Date on which the credit was opened", example = "2022-11-02T00:00:00-06:00")
	private String openingDate;
	
	@Schema(name = "weeklyPayment", description = "Amount of weekly payment", example = "250")
	private BigDecimal weeklyPayment;
	
	@Schema(name = "paymentAmount", description = "Amount to cover in the week", example = "500")
	private BigDecimal paymentAmount;
	
	@Schema(name = "totalDebt", description = "Total credit debt", example = "5000")
	private BigDecimal totalDebt;
	
	@Schema(name = "payOffAmount", description = "Total amount that the client must pay if wants to settle her credit on the date (removing unpaid interest)", example = "4000")
	private BigDecimal payOffAmount;
	
	@Schema(name = "duePayments", description = "Number of unpaid payments to date", example = "2")
	private Integer duePayments;
	
	@Schema(name = "term", description = "Number of total installments of the credit", example = "20")
	private Integer term;
	
	@Schema(name = "currentWeek", description = "Number of the current payment in the credit", example = "12")
	private Integer currentWeek;
	
	@Schema(name = "partial", description = "Advanced amount", example = "0")
	private BigDecimal partial;
	
	@Schema(name = "commissionGenerated", description = "Commission generated by paying a installment on time", example = "8")
	private BigDecimal commissionGenerated;

	@Schema(name = "refinancingCredit", description = "Flag to know if it is a refinancing loan", example = "true")
	private Boolean refinancingCredit;

	@Schema(name = "numberOfOutstandingCommissions", description = "Number of outstanding commissions", example = "2")
	private Integer numberOfOutstandingCommissions;
}